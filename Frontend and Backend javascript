if necessary 
npm install express mysql cors body-parser dotenv

Backend code
const express = require("express");
const mysql = require("mysql");
const cors = require("cors");
require("dotenv").config();

const app = express();
app.use(cors());
app.use(express.json());

const db = mysql.createConnection({
  host: "localhost",
  user: "root",
  password: "yourpassword",
  database: "yourdbname",
});

db.connect((err) => {
  if (err) throw err;
  console.log("MySQL Connected...");
});

// Get all medical tests
app.get("/medicaltests", (req, res) => {
  db.query("SELECT * FROM medicaltest", (err, results) => {
    if (err) return res.status(500).json(err);
    res.json(results);
  });
});

// Add a new medical test
app.post("/medicaltests", (req, res) => {
  const { test_type, patient_id, status } = req.body;
  db.query(
    "INSERT INTO medicaltest (test_type, patient_id, status) VALUES (?, ?, ?)",
    [test_type, patient_id, status],
    (err, results) => {
      if (err) return res.status(500).json(err);
      res.json({ message: "Test ordered successfully", id: results.insertId });
    }
  );
});

// Get all prescriptions
app.get("/prescriptions", (req, res) => {
  db.query("SELECT * FROM prescription", (err, results) => {
    if (err) return res.status(500).json(err);
    res.json(results);
  });
});

// Add a new prescription
app.post("/prescriptions", (req, res) => {
  const { patient_id, medication_name, dosage, status } = req.body;
  db.query(
    "INSERT INTO prescription (patient_id, medication_name, dosage, date_prescribed, status) VALUES (?, ?, ?, NOW(), ?)",
    [patient_id, medication_name, dosage, status],
    (err, results) => {
      if (err) return res.status(500).json(err);
      res.json({ message: "Prescription added successfully", id: results.insertId });
    }
  );
});

app.listen(5000, () => console.log("Server running on port 5000"));

Frontend if necessary 
npm install axios react-router-dom

MedicalTests.jsx
import { useState, useEffect } from "react";
import axios from "axios";

const MedicalTests = () => {
  const [tests, setTests] = useState([]);
  const [newTest, setNewTest] = useState({ test_type: "", patient_id: "", status: "Ordered" });

  useEffect(() => {
    axios.get("http://localhost:5000/medicaltests").then((res) => setTests(res.data));
  }, []);

  const handleSubmit = (e) => {
    e.preventDefault();
    axios.post("http://localhost:5000/medicaltests", newTest).then((res) => {
      setTests([...tests, { ...newTest, test_id: res.data.id }]);
      setNewTest({ test_type: "", patient_id: "", status: "Ordered" });
    });
  };

  return (
    <div>
      <h2>Medical Tests</h2>
      <form onSubmit={handleSubmit}>
        <input type="text" placeholder="Test Type" value={newTest.test_type} onChange={(e) => setNewTest({ ...newTest, test_type: e.target.value })} required />
        <input type="number" placeholder="Patient ID" value={newTest.patient_id} onChange={(e) => setNewTest({ ...newTest, patient_id: e.target.value })} required />
        <button type="submit">Order Test</button>
      </form>
      <ul>
        {tests.map((test) => (
          <li key={test.test_id}>{test.test_type} - {test.status}</li>
        ))}
      </ul>
    </div>
  );
};

export default MedicalTests;

Prescriptions.jsx
import { useState, useEffect } from "react";
import axios from "axios";

const Prescriptions = () => {
  const [prescriptions, setPrescriptions] = useState([]);
  const [newPrescription, setNewPrescription] = useState({ patient_id: "", medication_name: "", dosage: "", status: "Active" });

  useEffect(() => {
    axios.get("http://localhost:5000/prescriptions").then((res) => setPrescriptions(res.data));
  }, []);

  const handleSubmit = (e) => {
    e.preventDefault();
    axios.post("http://localhost:5000/prescriptions", newPrescription).then((res) => {
      setPrescriptions([...prescriptions, { ...newPrescription, prescription_id: res.data.id }]);
      setNewPrescription({ patient_id: "", medication_name: "", dosage: "", status: "Active" });
    });
  };

  return (
    <div>
      <h2>Prescriptions</h2>
      <form onSubmit={handleSubmit}>
        <input type="number" placeholder="Patient ID" value={newPrescription.patient_id} onChange={(e) => setNewPrescription({ ...newPrescription, patient_id: e.target.value })} required />
        <input type="text" placeholder="Medication Name" value={newPrescription.medication_name} onChange={(e) => setNewPrescription({ ...newPrescription, medication_name: e.target.value })} required />
        <input type="text" placeholder="Dosage" value={newPrescription.dosage} onChange={(e) => setNewPrescription({ ...newPrescription, dosage: e.target.value })} required />
        <button type="submit">Prescribe</button>
      </form>
      <ul>
        {prescriptions.map((prescription) => (
          <li key={prescription.prescription_id}>{prescription.medication_name} - {prescription.dosage} - {prescription.status}</li>
        ))}
      </ul>
    </div>
  );
};

export default Prescriptions;

if necessary routing.jsx
import { BrowserRouter as Router, Route, Routes } from "react-router-dom";
import MedicalTests from "./MedicalTests";
import Prescriptions from "./Prescriptions";

function App() {
  return (
    <Router>
      <Routes>
        <Route path="/MedicalTests" element={<MedicalTests />} />
        <Route path="/Prescriptions" element={<Prescriptions />} />
      </Routes>
    </Router>
  );
}

export default App;

if necessary to start
Backend
node server.js

Frontend
npm start
